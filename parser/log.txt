Line# 1: Token <LCURL> Lexeme { found
Line# 2: Token <FOR> Lexeme for found
Line# 2: Token <LPAREN> Lexeme ( found
Line# 2: Token <ID> Lexeme i found
	'i' not found in any of the ScopeTables
Line# 2: Token <ASSIGNOP> Lexeme = found
variable : identifier
Line# 2: Token <CONST_INT> Lexeme 0 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 2: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : variable ASSIGNOP logic_expression
expression_statement : expression SEMICOLON
Line# 2: Token <ID> Lexeme i found
	'i' found in ScopeTable# 1 at position 6, 1
Line# 2: Token <RELOP> Lexeme < found
variable : identifier
factor : variable
unary_expression : factor
term : unary_expression
simple_expression : term
Line# 2: Token <CONST_INT> Lexeme 10 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 2: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression RELOP simple_expression
logic_expression : rel_expression
expression : logic_expression
expression_statement : expression SEMICOLON
Line# 2: Token <ID> Lexeme i found
	'i' found in ScopeTable# 1 at position 6, 1
Line# 2: Token <INCOP> Lexeme ++ found
variable : identifier
factor : variable INCOP
unary_expression : factor
term : unary_expression
Line# 2: Token <RPAREN> Lexeme ) found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
Line# 2: Token <LCURL> Lexeme { found
Line# 3: Token <ID> Lexeme j found
	'j' not found in any of the ScopeTables
Line# 3: Token <ASSIGNOP> Lexeme = found
variable : identifier
Line# 3: Token <ID> Lexeme i found
	'i' found in ScopeTable# 1 at position 6, 1
Line# 3: Token <SEMICOLON> Lexeme ; found
variable : identifier
factor : variable
unary_expression : factor
term : unary_expression
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : variable ASSIGNOP logic_expression
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statement
Line# 4: Token <RCURL> Lexeme } found
compound_statement: LCURL statements RCURL
statement : compound_statement
statement : FOR LPAREN expression_statement expression_statement expression RPAREN statement
statements : statement
Line# 5: Token <RCURL> Lexeme } found
compound_statement: LCURL statements RCURL
