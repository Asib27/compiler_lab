Line# 1: Token <VOID> Lexeme void found
type_specifier : VOID
Line# 1: Token <ID> Lexeme abc found
Line# 1: Token <LPAREN> Lexeme ( found
Line# 1: Token <RPAREN> Lexeme ) found
Line# 1: Token <SEMICOLON> Lexeme ; found
func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON
unit : func_declaration
program : unit
Line# 3: Token <INT> Lexeme int found
type_specifier : INT
Line# 3: Token <ID> Lexeme main found
Line# 3: Token <LPAREN> Lexeme ( found
Line# 3: Token <INT> Lexeme int found
type_specifier : INT
Line# 3: Token <ID> Lexeme a found
parameter_list : type_specifier ID
Line# 3: Token <RPAREN> Lexeme ) found
Line# 3: Token <LCURL> Lexeme { found
Line# 4: Token <ID> Lexeme abc found
Line# 4: Token <LPAREN> Lexeme ( found
Line# 4: Token <RPAREN> Lexeme ) found
argument_list : 
factor : ID LPAREN argument_list RPAREN
unary_expression : factor
term : unary_expression
Line# 4: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statement
Line# 5: Token <IF> Lexeme if found
Line# 5: Token <LPAREN> Lexeme ( found
Line# 5: Token <ID> Lexeme abc found
Line# 5: Token <LPAREN> Lexeme ( found
Line# 5: Token <RPAREN> Lexeme ) found
argument_list : 
factor : ID LPAREN argument_list RPAREN
unary_expression : factor
term : unary_expression
Line# 5: Token <RPAREN> Lexeme ) found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
Line# 5: Token <LCURL> Lexeme { found
Line# 6: Token <RETURN> Lexeme return found
Line# 6: Token <CONST_INT> Lexeme 1 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 6: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
statement : RETURN expression SEMICOLON
statements : statement
Line# 7: Token <RCURL> Lexeme } found
compound_statement: LCURL statements RCURL
	ScopeTable# 4
	ScopeTable# 3
	10--> <a, INT> 
	ScopeTable# 1
	2--> <main, FUNCTION, INT> 
	11--> <abc, FUNCTION, VOID> 
statement : compound_statement
Line# 9: Token <IF> Lexeme if found
statement : IF LPAREN expression RPAREN statement
statements : statements statement
Line# 9: Token <LPAREN> Lexeme ( found
Line# 9: Token <ID> Lexeme abc found
Line# 9: Token <LPAREN> Lexeme ( found
Line# 9: Token <RPAREN> Lexeme ) found
argument_list : 
factor : ID LPAREN argument_list RPAREN
unary_expression : factor
term : unary_expression
Line# 9: Token <RPAREN> Lexeme ) found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
Line# 9: Token <LCURL> Lexeme { found
Line# 11: Token <RCURL> Lexeme } found
compound_statement : LCURL RCURL
statement : compound_statement
Line# 11: Token <ELSE> Lexeme else found
Line# 11: Token <LCURL> Lexeme { found
Line# 13: Token <RCURL> Lexeme } found
compound_statement : LCURL RCURL
statement : compound_statement
statement : IF LPAREN expression RPAREN statement ELSE statement
statements : statements statement
Line# 15: Token <WHILE> Lexeme while found
Line# 15: Token <LPAREN> Lexeme ( found
Line# 15: Token <ID> Lexeme abc found
Line# 15: Token <LPAREN> Lexeme ( found
Line# 15: Token <RPAREN> Lexeme ) found
argument_list : 
factor : ID LPAREN argument_list RPAREN
unary_expression : factor
term : unary_expression
Line# 15: Token <RPAREN> Lexeme ) found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
Line# 15: Token <LCURL> Lexeme { found
Line# 17: Token <RCURL> Lexeme } found
compound_statement : LCURL RCURL
statement : compound_statement
statement : WHILE LPAREN expression RPAREN statement
statements : statements statement
Line# 19: Token <FOR> Lexeme for found
Line# 19: Token <LPAREN> Lexeme ( found
Line# 19: Token <ID> Lexeme abc found
Line# 19: Token <LPAREN> Lexeme ( found
Line# 19: Token <RPAREN> Lexeme ) found
argument_list : 
factor : ID LPAREN argument_list RPAREN
unary_expression : factor
term : unary_expression
Line# 19: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
expression_statement : expression SEMICOLON
Line# 19: Token <ID> Lexeme abc found
Line# 19: Token <LPAREN> Lexeme ( found
Line# 19: Token <RPAREN> Lexeme ) found
argument_list : 
factor : ID LPAREN argument_list RPAREN
unary_expression : factor
term : unary_expression
Line# 19: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
expression_statement : expression SEMICOLON
Line# 19: Token <ID> Lexeme abc found
Line# 19: Token <LPAREN> Lexeme ( found
Line# 19: Token <RPAREN> Lexeme ) found
argument_list : 
factor : ID LPAREN argument_list RPAREN
unary_expression : factor
term : unary_expression
Line# 19: Token <RPAREN> Lexeme ) found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
Line# 19: Token <LCURL> Lexeme { found
Line# 21: Token <RCURL> Lexeme } found
compound_statement : LCURL RCURL
statement : compound_statement
statement : FOR LPAREN expression_statement expression_statement expression RPAREN statement
statements : statements statement
Line# 23: Token <RETURN> Lexeme return found
Line# 23: Token <ID> Lexeme abc found
Line# 23: Token <LPAREN> Lexeme ( found
Line# 23: Token <RPAREN> Lexeme ) found
argument_list : 
factor : ID LPAREN argument_list RPAREN
unary_expression : factor
term : unary_expression
Line# 23: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
statement : RETURN expression SEMICOLON
statements : statements statement
Line# 24: Token <RCURL> Lexeme } found
compound_statement: LCURL statements RCURL
	ScopeTable# 3
	10--> <a, INT> 
	ScopeTable# 1
	2--> <main, FUNCTION, INT> 
	11--> <abc, FUNCTION, VOID> 
func_definition : type_specifier ID LPAREN parameter_list RPAREN compound_statement
unit : func_definition
program : program unit
start : program
Total Lines: 25
Total Errors: 7
