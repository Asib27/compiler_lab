Line# 1: Token <INT> Lexeme int found
type_specifier : INT
Line# 1: Token <ID> Lexeme abc found
Line# 1: Token <LPAREN> Lexeme ( found
Line# 1: Token <INT> Lexeme int found
type_specifier : INT
Line# 1: Token <ID> Lexeme a found
parameter_list : type_specifier ID
Line# 1: Token <RPAREN> Lexeme ) found
Line# 1: Token <LCURL> Lexeme { found
Line# 2: Token <ID> Lexeme a found
Line# 2: Token <ASSIGNOP> Lexeme = found
variable : ID
Line# 2: Token <CONST_INT> Lexeme 10 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 2: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : variable ASSIGNOP logic_expression
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statement
Line# 3: Token <ID> Lexeme a found
Line# 3: Token <ASSIGNOP> Lexeme = found
variable : ID
Line# 3: Token <ID> Lexeme a found
Line# 3: Token <MULOP> Lexeme / found
variable : ID
factor : variable
unary_expression : factor
term : unary_expression
Line# 3: Token <CONST_FLOAT> Lexeme 0.0 found
factor : CONST_FLOAT
unary_expression : factor
term : term MULOP unary_expression
Line# 3: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : variable ASSIGNOP logic_expression
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statements statement
Line# 4: Token <RCURL> Lexeme } found
compound_statement: LCURL statements RCURL
	ScopeTable# 2
	8--> <a,INT> 
	ScopeTable# 1
	9--> <abc,FUNCTION,INT> 
func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
unit : func_definition
program : unit
start : program
Total Lines: 5
Total Errors: 2
