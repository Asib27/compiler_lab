Line# 1: Token <SINGLE LINE COMMENT> Lexeme // int cd(float -); found
Line# 3: Token <SINGLE LINE COMMENT> Lexeme // int cde(int a, float -); found
Line# 4: Token <SINGLE LINE COMMENT> Lexeme // int cde(int a, float -, int c); found
Line# 6: Token <INT> Lexeme int found
type_specifier : INT
Line# 6: Token <ID> Lexeme abc found
Line# 6: Token <LPAREN> Lexeme ( found
Line# 6: Token <INT> Lexeme int found
type_specifier : INT
Line# 6: Token <ID> Lexeme a found
parameter_list : type_specifier ID
Line# 6: Token <RPAREN> Lexeme ) found
Line# 6: Token <LCURL> Lexeme { found
Line# 7: Token <INT> Lexeme int found
type_specifier : INT
Line# 7: Token <ID> Lexeme a found
Line# 7: Token <ADDOP> Lexeme - found
declaration_list : ID
Line# 7: Token <COMMA> Lexeme , found
Line# 7: Token <ID> Lexeme b found
Line# 7: Token <COMMA> Lexeme , found
declaration_list : declaration_list COMMA ID
Line# 7: Token <ID> Lexeme c found
Line# 7: Token <SEMICOLON> Lexeme ; found
declaration_list : declaration_list COMMA ID
var_declaration : type_specifier declaration_list SEMICOLON
statement : var_declaration
statements : statement
Line# 8: Token <ID> Lexeme a found
Line# 8: Token <ASSIGNOP> Lexeme = found
variable : ID
Line# 8: Token <CONST_INT> Lexeme 10 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 8: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : variable ASSIGNOP logic_expression
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statements statement
Line# 9: Token <RCURL> Lexeme } found
compound_statement: LCURL statements RCURL
	ScopeTable# 2
	8--> <a,INT> 
	ScopeTable# 1
	9--> <abc,FUNCTION,INT> 
func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
unit : func_definition
program : unit
start : program
Total Lines: 10
Total Errors: 1
