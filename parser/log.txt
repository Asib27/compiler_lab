Line# 1: Token <INT> Lexeme int found
type_specifier : INT
Line# 1: Token <ID> Lexeme a found
	'a' not found in any of the ScopeTables
Line# 1: Token <COMMA> Lexeme , found
declaration_list : identifier
Line# 1: Token <ID> Lexeme b found
	'b' not found in any of the ScopeTables
Line# 1: Token <COMMA> Lexeme , found
declaration_list : declaration_list COMMA identifier
Line# 1: Token <ID> Lexeme c found
	'c' not found in any of the ScopeTables
Line# 1: Token <SEMICOLON> Lexeme ; found
declaration_list : declaration_list COMMA identifier
var_declaration : type_specifier declaration_list SEMICOLON
unit : var_declaration
program : unit
Line# 3: Token <INT> Lexeme int found
type_specifier : INT
Line# 3: Token <ID> Lexeme abc found
	'abc' not found in any of the ScopeTables
Line# 3: Token <LPAREN> Lexeme ( found
Line# 3: Token <RPAREN> Lexeme ) found
Line# 3: Token <SEMICOLON> Lexeme ; found
func_declaration: type_specifier ID LPAREN RPAREN SEMICOLON
unit : func_declaration
program : program unit
Line# 5: Token <INT> Lexeme int found
type_specifier : INT
Line# 5: Token <ID> Lexeme cdf found
	'cdf' not found in any of the ScopeTables
Line# 5: Token <LPAREN> Lexeme ( found
Line# 5: Token <INT> Lexeme int found
type_specifier : INT
Line# 5: Token <COMMA> Lexeme , found
parameter_list : type_specifier
Line# 5: Token <INT> Lexeme int found
type_specifier : INT
Line# 5: Token <RPAREN> Lexeme ) found
parameter_list: parameter_list COMMA type_specifier
Line# 5: Token <SEMICOLON> Lexeme ; found
func_declaration: type_specifier ID LPAREN parameter_list RPAREN SEMICOLON
unit : func_declaration
program : program unit
Line# 7: Token <INT> Lexeme int found
type_specifier : INT
Line# 7: Token <ID> Lexeme abc found
	'abc' found in ScopeTable# 1 at position 9, 2
Line# 7: Token <LPAREN> Lexeme ( found
Line# 7: Token <INT> Lexeme int found
type_specifier : INT
Line# 7: Token <ID> Lexeme a found
	'a' found in ScopeTable# 1 at position 8, 1
parameter_list : type_specifier ID
Line# 7: Token <RPAREN> Lexeme ) found
Line# 7: Token <LCURL> Lexeme { found
Line# 8: Token <ID> Lexeme a found
	'a' found in ScopeTable# 1 at position 8, 1
Line# 8: Token <ASSIGNOP> Lexeme = found
variable : identifier
Line# 8: Token <CONST_INT> Lexeme 10 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 8: Token <ADDOP> Lexeme + found
simple_expression : term
Line# 8: Token <CONST_INT> Lexeme 5 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 8: Token <SEMICOLON> Lexeme ; found
simple_expression : simple_expression ADDOP term
rel_expression : simple_expression
logic_expression : rel_expression
expression : variable ASSIGNOP logic_expression
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statement
Line# 9: Token <RCURL> Lexeme } found
compound_statement: LCURL statements RCURL
func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
unit : func_definition
program : program unit
Line# 11: Token <INT> Lexeme int found
type_specifier : INT
Line# 11: Token <ID> Lexeme cdf found
	'cdf' found in ScopeTable# 1 at position 2, 1
Line# 11: Token <LPAREN> Lexeme ( found
Line# 11: Token <INT> Lexeme int found
type_specifier : INT
Line# 11: Token <ID> Lexeme a found
	'a' found in ScopeTable# 1 at position 8, 1
parameter_list : type_specifier ID
Line# 11: Token <RPAREN> Lexeme ) found
Line# 11: Token <LCURL> Lexeme { found
Line# 12: Token <ID> Lexeme a found
	'a' found in ScopeTable# 1 at position 8, 1
Line# 12: Token <LTHIRD> Lexeme [ found
Line# 12: Token <CONST_INT> Lexeme 2 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 12: Token <RTHIRD> Lexeme ] found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : logic_expression
variable : identifier LTHIRD expression RTHIRD
Line# 12: Token <ASSIGNOP> Lexeme = found
Line# 12: Token <CONST_INT> Lexeme 5 found
factor : CONST_INT
unary_expression : factor
term : unary_expression
Line# 12: Token <SEMICOLON> Lexeme ; found
simple_expression : term
rel_expression : simple_expression
logic_expression : rel_expression
expression : variable ASSIGNOP logic_expression
expression_statement : expression SEMICOLON
statement : expression_statement
statements : statement
Line# 13: Token <RCURL> Lexeme } found
compound_statement: LCURL statements RCURL
func_definition: type_specifier ID LPAREN parameter_list RPAREN compound_statement
unit : func_definition
program : program unit
start : program
